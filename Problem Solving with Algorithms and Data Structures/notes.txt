--python list functions--
append
insert
pop
sort
reverse
del
index
count
remove

--python buit in functions--
list()          >> turns a string of characters into a list
sort()          >> Sorts a list in ascending order (by default).
len()           >> Returns the number of items in a list.
ord()           >> Returns the integer representing the Unicode code of a specified character.
stack()         >> Creates a new stack that is empty. It requires no parameters and returns an empty stack.
push(item)      >> Adds a new item to the top of the stack. It requires the item and returns nothing.
pop()           >> Removes the top item from the stack. It requires no parameters and returns the item. The stack is modified.
peek()          >> Returns the top item from the stack but does not remove it. It requires no parameters. The stack is not modified.
is_empty()      >> Tests whether the stack is empty. It requires no parameters and returns a boolean value.
size()          >> Returns the number of items on the stack. It requires no parameters and returns an integer.
count()         >> Returns the number of elements with the specified value.
set()           >> Creates a set to store multiple items. Sets are unordered, unchangeable, and do not allow duplicate values.
split()         >> Splits a string into a list of substrings based on a delimiter.
join()          >> Concatenates elements of a list into a single string using a specified delimiter.
lower()         >> Converts a string to lowercase.
upper()         >> Converts a string to uppercase.
replace()       >> Replaces occurrences of a substring in a string with another substring.
keys()          >> Returns a list of keys in a dictionary.
values()        >> Returns a list of values in a dictionary.
items()         >> Returns a list of key-value pairs in a dictionary.
get()           >> Returns the value associated with a specified key in a dictionary.
sorted()        >> Returns a new sorted list based on the elements of an iterable.
min()           >> Returns the smallest element in an iterable or a series of arguments.
max()           >> Returns the largest element in an iterable or a series of arguments.
sum()           >> Returns the sum of all elements in an iterable.
abs()           >> Returns the absolute value of a number.
pow()           >> Raises a number to a specified power.
round()         >> Rounds a number to a specified precision.
math.sqrt()     >> Returns the square root of a number.
math.factorial()>> Returns the factorial of a number.
enumerate()     >> turns a list into a dict with an int as the key for each entry
isalnum()       >> checks if a character is alphanumerical and returns boolean

string[::-1]    >> iterates string in a reverse order


--python lib functions--
array.array() >> more mem efficient than list. contains append() extend() pop()
from timeit import Timer >> for timing function run times

--tuples() vs lists[]--
tuples are like lists that cannot be modified
tuples use () instead of [] like a list


--Common function for Big sum_of_n_3--
f(n)            Name
1               Constant
log n           Logarithmic
n               Linear
n log n         Log Linear
n2              Quadratic
n3              Cubic
2n              Exponential


--Big O Efficiency of Python Operators--
--List--
index []		    O(1)
index assignment	O(1)
append			    O(1)
pop()			    O(1)
pop(i)			    O(n)
insert(i, item)		O(n)
del operator		O(n)
iteration		    O(n)
contains (in)		O(n)
get slice [x:y]		O(k)
del slice		    O(n)
set slice		    O(n+k)
reverse			    O(n)
concatenate		    O(k)
sort			    O(n log n)
multiply		    O(nk)

--Dict--
copy		        O(n)
get item	        O(1)
set item	        O(1)
delete item	        O(1)
contains (in)	    O(1)
iteration	        O(n)



--Linear Structures--
Datastructure that has 2 ends
front > back
top > bottom
etc

--Stack--
Is an ordered collection of items where the addition of new items and the removal of existing itemd
always takes place at the same end, a bit like an 'in tray'


